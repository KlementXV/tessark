# Default values for tessark
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

namespace: tessark

backend:
  name: tessark-backend
  replicaCount: 2
  image:
    # Change this to your own GitHub Container Registry repository
    # Example: ghcr.io/your-username/tessark-backend
    repository: ghcr.io/klementxv/tessark-backend
    tag: latest
    pullPolicy: Always
  service:
    type: ClusterIP
    port: 8080
    targetPort: 8080
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "1000m"
  env:
    PORT: "8080"
    RUST_LOG: "info"

frontend:
  name: tessark-frontend
  replicaCount: 2
  image:
    # Change this to your own GitHub Container Registry repository
    # Example: ghcr.io/your-username/tessark-frontend
    repository: ghcr.io/klementxv/tessark-frontend
    tag: latest
    pullPolicy: Always
  service:
    type: ClusterIP
    port: 8080
    targetPort: 8080
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "500m"
  env:
    PORT: "8080"

ingress:
  enabled: true
  # Choose ingress controller type: "traefik" or "nginx"
  type: traefik
  # Change this to your own domain
  host: tessark.example.com
  tls:
    enabled: true
    # For Traefik: cert-manager certificate resolver name
    # For Nginx: leave as is if using cert-manager with nginx
    certResolver: letsencrypt
    # Optional: specify existing TLS secret name (leave empty for auto-generation)
    secretName: ""
  # Traefik specific configuration
  traefik:
    entryPoints:
      - websecure
  # Nginx specific configuration
  nginx:
    ingressClassName: nginx
    annotations: {}
      # Example annotations:
      # cert-manager.io/cluster-issuer: "letsencrypt-prod"
      # nginx.ingress.kubernetes.io/ssl-redirect: "true"
